{
    "Comment": "Image Processing State Machine",
    "StartAt": "GetFileType",
    "States": {
        "GetFileType": {
            "Type": "Task",
            "Resource": "${GetFileTypeFunctionArn}",
            "TimeoutSeconds": 3,
            "ResultPath": "$.results.fileType",
            "Next": "CheckFileType",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "QuitMain"
                }
            ]
        },
        "CheckFileType": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$.results.fileType",
                    "StringEquals": "png",
                    "Next": "ProcessFile"
                }
            ],
            "Default": "DeleteSourceFile"
        },
        "ProcessFile": {
            "Type": "Parallel",
            "Next": "WriteToDynamoDb",
            "ResultPath": "$.results.images",
            "Branches": [
                {
                    "StartAt": "CopyToDestination",
                    "States": {
                        "CopyToDestination": {
                            "Type": "Task",
                            "Resource": "${CopyFileFunctionArn}",
                            "TimeoutSeconds": 3,
                            "ResultSelector": {
                                "original.$": "$"
                            },
                            "End": true,
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.Timeout",
                                        "States.TaskFailed"
                                    ],
                                    "BackoffRate": 2,
                                    "IntervalSeconds": 5,
                                    "MaxAttempts": 2
                                },
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "BackoffRate": 1,
                                    "IntervalSeconds": 2,
                                    "MaxAttempts": 2
                                }
                            ],
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "Next": "QuitCopy"
                                }
                            ]
                        },
                        "QuitCopy": {
                            "Type": "Fail",
                            "Cause": "An error occurred while executing the CopyToDestination task",
                            "Error": "CopyError"
                        }
                    }
                },
                {
                    "StartAt": "ResizeImage",
                    "States": {
                        "ResizeImage": {
                            "Type": "Task",
                            "Resource": "${ResizeImageFunctionArn}",
                            "TimeoutSeconds": 10,
                            "ResultSelector": {
                                "thumbnail.$": "$"
                            },
                            "End": true,
                            "Retry": [
                                {
                                    "ErrorEquals": [
                                        "States.Timeout",
                                        "States.TaskFailed"
                                    ],
                                    "BackoffRate": 2,
                                    "IntervalSeconds": 5,
                                    "MaxAttempts": 2
                                },
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "BackoffRate": 1,
                                    "IntervalSeconds": 2,
                                    "MaxAttempts": 2
                                }
                            ],
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "Next": "QuitResize"
                                }
                            ]
                        },
                        "QuitResize": {
                            "Type": "Fail",
                            "Cause": "An error occurred while executing the ResizeImage task",
                            "Error": "ResizeError"
                        }
                    }
                }
            ]
        },
        "WriteToDynamoDb": {
            "Type": "Task",
            "Resource": "${WriteToDynamoDbFunctionArn}",
            "TimeoutSeconds": 3,
            "ResultPath": "$.results.writeToDynamoDbStatus",
            "Next": "DeleteSourceFile",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "QuitMain"
                }
            ]
        },
        "DeleteSourceFile": {
            "Type": "Task",
            "Resource": "${DeleteFileFunctionArn}",
            "TimeoutSeconds": 3,
            "ResultPath": "$.results.deletionStatus",
            "OutputPath": "$.results",
            "End": true,
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "Next": "QuitMain"
                }
            ]
        },
        "QuitMain": {
            "Type": "Fail",
            "Error": "GenericError",
            "Cause": "An error occurred while executing the state machine"
        }
    }
}